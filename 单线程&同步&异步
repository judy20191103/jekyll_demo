javascript是单线程是指一个浏览器中只有一个JS的执行线程，同一时刻内只会有一段代码在执行。而异步机制是浏览器的两个或者以上常驻线程共同完成的，
例如异步请求是由两个常驻线程：JS执行线程和事件触发线程共同完成的，JS的执行线程发起异步请求（这时候浏览器会开一条新的HTTP请求线程来执行请求，这时的JS的任务已经完成，继续执行线程队列中剩下的其他任务），然后在未来的某一时刻事件触发线程监视到之前发起的http请求已经完成，它就会把事件插入到JS执行队列的尾部等待JS处理。又例如定时触发(settimeout和setinterval)是由浏览器的定时器线程执行的定时器计数，然后在定时时间把定时处理函数的执行请求插入到JS执行队列的尾端
（所以用这两个函数的时候，实际的执行时间大于等于指定的时间，不能保证准时）。

同步&异步
进程同步，就是在发出一个功能调用时，在没有得到解雇之前，该调用就不返回。也就是必须一件一件事情做，等做完了前一件才能做下一件事。
异步则和同步相对，当一个异步过程调用时，调用者不能立即得到结果。实际处理这个调用的部件在完成之后，通过状态，通过状态，通知和回调来调用通知者。

异步传输，异步传输时以字符为传输单位，每个字符都要附加1位起始位和1位停止位，以标志一个字符的开始和结束，并以此实现数据传输同步。所谓异步传输时指字符与字符之间的时间间隔时可变的，并不需要严格限制他们的时间关系。
同步传输是以数据块为传输单位，每个数据块的头部和尾部都要附加一个特殊的字符或者比特序列，标志一个数据块的开始和结束。

普通B/S模式（同步） AJAX技术（异步）
同步：提交请求->等待服务器处理->处理完毕返回 这个期间客户端浏览器不能干任何事
异步:请求通过事件触发->服务器处理（这时候浏览器仍然可以做其他事情，也就是ajax实现无刷新表单原理）->处理完毕

