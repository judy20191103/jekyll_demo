box-shadow:[inset] x y blur [spread] color
参数
inset：投影方式
inset：内投影
不给：外投影
x、y：阴影偏移
blur：模糊半径
spread：扩展阴影半径
先扩展原有形状，再开始画阴影
color


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <style>
        @-webkit-keyframes open {
        /* 类似图片的抖动原理*/
             0%{
                 -webkit-transform:rotateX(-120deg);
             }
            25%{
                -webkit-transform:rotateX(30deg);
            }
            50%{
                -webkit-transform:rotateX(-15deg);
            }
            75%{
                -webkit-transform:rotateX(8deg);
            }
            100%{
                -webkit-transform:rotateX(0deg);
            }
        }
        @-webkit-keyframes close {
            0%{
                -webkit-transform:rotateX(0deg);
            }
            100%{
                -webkit-transform:rotateX(-120deg);
            }
        }
        #wrap{
            width:160px;
            margin:30px auto;
            position:relative;
            -webkit-perspective: 800px;
        }
        #wrap h2{
            height:40px;
            position:relative;
            z-index:10;;/*让h2盖住div折纸，然后点击按钮的时候有展开效果*/
            margin:0;
            background:#F60;
            color:#fff;
            font:bold 16px/40px "微软雅黑";
            text-align:center;
        }
        #wrap div{
            position:absolute;//设置所有div都是绝对定位，方便让其所有子级都根据父元素进行定位
            top:32px;
            left:0;
            width:100%;/*父级的宽度*百分数，如果设置成50%，则它的宽度会越来越小....,如果不设置宽度，div的宽随着span的内容宽度而变换，但是会有限制*/
            -webkit-transform-style:preserve-3d;
            -webkit-transform-origin:top;
            -webkit-transform:rotateX(-120deg);/* 一开始就让所有div折叠起来*/
        }
        #wrap span{
            display:block;
            height:30px;
            border:1px solid #000;
            background:#9F0;
            font:12px/30px "宋体";
            color:#fff;
            text-indent: 20px;
            box-shadow:inset 0 0 0 20px rgba(0,0,0,1);//黑色盒阴影
            transition:1s;
        }
        #wrap>div{
            top:40px;/*因为h2的高度定为40px ，第一个div距离wrap的顶部的距离*/
        }
        #wrap .show{
            -webkit-animation:2s open;
            -webkit-transform:rotateX(0deg);/*打开之后，正面显示折纸*/
        }
        #wrap .hide{
            -webkit-animation:0.8s cloase;
            -webkit-transform:rotateX(-120deg);/*折叠之后所有div都折叠起来，只能看到-120deg大小的矩形，并且由于z-index低于h2被覆盖掉*/
        }
        #wrap .show>span{
            box-shadow:inset 0 0 0 20px rgba(0,0,0,0);/*该颜色是透明的颜色，也就是由原来的黑色->消失（透明）。在打开的过程中，最下面的span的盒子阴影随着往下打开的折
            纸而显示出来然后快速消失，span{ transition:1s}*/
        }
        #btn{
            position:absolute;
        }
    </style>
</head>
<body>
<input type="button" value="按钮" id="btn"/>
<div id="wrap">
    <h2>我是标签</h2>
    <div>
        <span>选项1</span>
        <div>
            <span>选项2</span>
            <div>
                <span>选项3</span>
                <div>
                    <span>选项4</span>
                    <div>
                        <span>选项5</span>
                        <div>
                            <span>选项6</span>
                            <div>
                                <span>选项7</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var btn=document.getElementById("btn");
    var wrap=document.getElementById("wrap");
    var aDiv=wrap.getElementsByTagName("div");
    var iDelay=200;/*使得在展开的过程中，叠纸打开的速度变缓，给人一种缓缓而至的感觉*/
    var timer=null;
    var i=0;
    var onOff=true;
    /*第一步*/
    //if/else的代码其实是反对成的，这其中必然用到一个开关选择器，并且在叠纸打开的过程中要考虑点击按钮的情况，所以要处理一下
    //有两个方案，1：每次点击前都清除上一次的点击事件，这可以让其在打开的过程中点击-暂停-点击-继续
    //2：利用是否存在timer作为判断条件，如果存在timer（为真）立即返回，不做任何操作。
    btn.onclick=function () {
      /*  clearInterval(timer);*/
      //第四步
        if(timer){
            return; //如果定时器已经开启,直接返回，在展开的过程中就不能停止展开，而上面的清空定时器的做法可以
        }
        if(onOff){ /*第三步*/
            i=0;
            //第二步
            timer=setInterval(function () {
                aDiv[i].className="show";
                i++;
                if(i==aDiv.length){
                    clearInterval(timer);
                    timer=null;
                    onOff=false;
                }
            },iDelay);
        }
        else{
            i=aDiv.length-1;
            timer=setInterval(function () {
                aDiv[i].className="hide";
                i--;
                if(i<0){
                    clearInterval(timer);
                    timer=null;
                    onOff=true;
                }
            },iDelay);
        }
    }
</script>
</body>
</html>
